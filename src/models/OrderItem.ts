/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Product,
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
} from './';

/**
 * 
 * @export
 * @interface OrderItem
 */
export interface OrderItem {
    /**
     * 
     * @type {number}
     * @memberof OrderItem
     */
    buyingPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof OrderItem
     */
    id?: number;
    /**
     * 
     * @type {Product}
     * @memberof OrderItem
     */
    product?: Product;
    /**
     * 
     * @type {number}
     * @memberof OrderItem
     */
    productCount?: number;
    /**
     * 
     * @type {number}
     * @memberof OrderItem
     */
    total?: number;
}

export function OrderItemFromJSON(json: any): OrderItem {
    return OrderItemFromJSONTyped(json, false);
}

export function OrderItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'buyingPrice': !exists(json, 'buyingPrice') ? undefined : json['buyingPrice'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'product': !exists(json, 'product') ? undefined : ProductFromJSON(json['product']),
        'productCount': !exists(json, 'productCount') ? undefined : json['productCount'],
        'total': !exists(json, 'total') ? undefined : json['total'],
    };
}

export function OrderItemToJSON(value?: OrderItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'buyingPrice': value.buyingPrice,
        'id': value.id,
        'product': ProductToJSON(value.product),
        'productCount': value.productCount,
        'total': value.total,
    };
}


