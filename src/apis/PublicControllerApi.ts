/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    DeliveryDate,
    DeliveryDateFromJSON,
    DeliveryDateToJSON,
    OrderConfirmation,
    OrderConfirmationFromJSON,
    OrderConfirmationToJSON,
    OrderDto,
    OrderDtoFromJSON,
    OrderDtoToJSON,
} from '../models';

export interface GetDeliveryDatesUsingGETRequest {
    page: number;
    size: number;
}

export interface OrderUsingPOSTRequest {
    orderDto: OrderDto;
}

/**
 * no description
 */
export class PublicControllerApi extends runtime.BaseAPI {

    /**
     * getDeliveryDates
     */
    async getDeliveryDatesUsingGETRaw(requestParameters: GetDeliveryDatesUsingGETRequest): Promise<runtime.ApiResponse<Array<DeliveryDate>>> {
        if (requestParameters.page === null || requestParameters.page === undefined) {
            throw new runtime.RequiredError('page','Required parameter requestParameters.page was null or undefined when calling getDeliveryDatesUsingGET.');
        }

        if (requestParameters.size === null || requestParameters.size === undefined) {
            throw new runtime.RequiredError('size','Required parameter requestParameters.size was null or undefined when calling getDeliveryDatesUsingGET.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.size !== undefined) {
            queryParameters['size'] = requestParameters.size;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/delivery`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DeliveryDateFromJSON));
    }

    /**
     * getDeliveryDates
     */
    async getDeliveryDatesUsingGET(requestParameters: GetDeliveryDatesUsingGETRequest): Promise<Array<DeliveryDate>> {
        const response = await this.getDeliveryDatesUsingGETRaw(requestParameters);
        return await response.value();
    }

    /**
     * order
     */
    async orderUsingPOSTRaw(requestParameters: OrderUsingPOSTRequest): Promise<runtime.ApiResponse<OrderConfirmation>> {
        if (requestParameters.orderDto === null || requestParameters.orderDto === undefined) {
            throw new runtime.RequiredError('orderDto','Required parameter requestParameters.orderDto was null or undefined when calling orderUsingPOST.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/order`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: OrderDtoToJSON(requestParameters.orderDto),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => OrderConfirmationFromJSON(jsonValue));
    }

    /**
     * order
     */
    async orderUsingPOST(requestParameters: OrderUsingPOSTRequest): Promise<OrderConfirmation> {
        const response = await this.orderUsingPOSTRaw(requestParameters);
        return await response.value();
    }

}
